version: "3.3"

services:
  laravel-app-1:
    build:
      args:
        user: docker-user
      context: ./
      dockerfile: Dockerfile
    container_name: laravel-app-1
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./app1:/var/www
    networks:
      - docker-network

  laravel-prod-1:
    image: nginx:alpine
    container_name: laravel-prod-1
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./app1:/var/www
      - ./nginx/app1.conf:/etc/nginx/nginx.conf
    networks:
      - docker-network

  laravel-app-2:
    build:
      args:
        user: docker-user
      context: ./
      dockerfile: Dockerfile
    container_name: laravel-app-2
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./app2:/var/www
    networks:
      - docker-network

  laravel-prod-2:
    image: nginx:alpine
    container_name: laravel-prod-2
    restart: unless-stopped
    ports:
      - "81:80"
    volumes:
      - ./app2:/var/www
      - ./nginx/app2.conf:/etc/nginx/nginx.conf
    networks:
      - docker-network

  database:
    image: mysql:5.7
    container_name: database
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: "docker-rendu"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - docker-network

  phpmyadmin:
    container_name: db-pma
    image: phpmyadmin/phpmyadmin
    links:
      - database
    environment:
      PMA_HOST: database
      PMA_USER: user
      PMA_PASSWORD: password
      PMA_ARBITRARY: 1
    restart: unless-stopped
    ports:
      - 8080:80
    networks:
      - docker-network

volumes:
  db-data:

networks:
  docker-network:
    driver: bridge
